// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace VbWebApp.Migrations
{
    [DbContext(typeof(VbContext))]
    [Migration("20240205104457_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Login", b =>
                {
                    b.Property<string>("LoginID")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(94)
                        .HasColumnType("nvarchar(94)");

                    b.HasKey("LoginID");

                    b.ToTable("Logins", t =>
                        {
                            t.HasCheckConstraint("CH_Login_LoginID", "len(LoginID) = 8");

                            t.HasCheckConstraint("CH_Login_PasswordHash", "len(PasswordHash) = 94");
                        });
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Positions")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Models.Record", b =>
                {
                    b.Property<int>("RecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordID"));

                    b.Property<string>("Comment")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RecordTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("StatsPlayerID")
                        .HasColumnType("int");

                    b.HasKey("RecordID");

                    b.HasIndex("StatsPlayerID");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("Models.Stat", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerID"));

                    b.Property<decimal?>("HittingEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PassingEfficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PlayerID1")
                        .HasColumnType("int");

                    b.HasKey("PlayerID");

                    b.HasIndex("PlayerID1");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("Models.Record", b =>
                {
                    b.HasOne("Models.Stat", "Stats")
                        .WithMany("Records")
                        .HasForeignKey("StatsPlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("Models.Stat", b =>
                {
                    b.HasOne("Models.Player", null)
                        .WithMany("Stats")
                        .HasForeignKey("PlayerID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Player", b =>
                {
                    b.Navigation("Stats");
                });

            modelBuilder.Entity("Models.Stat", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
